using Newtonsoft.Json;
using System;
using System.Xml;
using System.Net;
using System.IO;
using RestSharp;
using System.Text;

namespace AuthenticationRequest
{
    internal class JSONRequest
    {
        public string serverUri = "https://o_drobina.tscrm.com/0/odata/UsrTestJSON";
        public string authServiceUri = "https://o_drobina.tscrm.com/ServiceModel/AuthService.svc/Login";
        public string userName = "Supervisor";
        public string userPassword = "Supervisor";
        CookieContainer AuthCookie = new CookieContainer();
        public string requestData;
        string CsrfToken;
        public void TryLogin()
        {
            var authData = @"{
                ""UserName"":""" + userName + @""",
                ""UserPassword"":""" + userPassword + @"""
            }";
            var request = CreateRequest(authServiceUri, authData);
            request.CookieContainer = AuthCookie;
            using (var response = (HttpWebResponse)request.GetResponse())
            {
                if (response.StatusCode == HttpStatusCode.OK)
                {
                    using (var reader = new StreamReader(response.GetResponseStream()))
                    {
                        var responseMessage = reader.ReadToEnd();
                        Console.WriteLine(responseMessage);
                        if (responseMessage.Contains("\"Code\":1"))
                        {
                            throw new UnauthorizedAccessException($"Unauthorized {userName} for {serverUri}");
                        }
                    }
                    CsrfToken = response.Cookies["BPMCSRF"].Value;

                    for (int i = 0; i < 4; i++) {
                        string authName = response.Cookies[i].Name;
                        string authCookeValue = response.Cookies[i].Value;
                        AuthCookie.Add(new Uri(serverUri), new Cookie(authName, authCookeValue));
                    }
                }
            }
        }
        private HttpWebRequest CreateRequest(string url, string requestData = null)
        {
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
            request.ContentType = "application/json";
            request.Method = "POST";
            request.KeepAlive = true;
            request.Headers.Add("BPMCSRF", CsrfToken);
            
            if (!string.IsNullOrEmpty(requestData))
            {
                using (var requestStream = request.GetRequestStream())
                {
                    using (var writer = new StreamWriter(requestStream))
                    {
                        writer.Write(requestData);
                    }
                }
            }
            return request;
        }
        public void formRequestData() 
        {
            string xml = @"<?xml version='1.0' encoding='UTF - 8'?><ROOT><HEADER><TRANSTYPE>abcd</TRANSTYPE><RECORD_COUNT>1</RECORD_COUNT><TRANSDATE>2021-03-11</TRANSDATE><TRANSTIME>13:19:11</TRANSTIME></HEADER><DATARECORD><MLAPRIM><POLICYNUMBER>77777777</POLICYNUMBER><SEQNO>001</SEQNO><PRODUCTTYPE>CC</PRODUCTTYPE><PAYOR>abcd</PAYOR><PAYORADDR1>22abcd</PAYORADDR1><PAYORADDR2>abcd</PAYORADDR2><PAYORADDR3>abcd</PAYORADDR3><PAYORADDR4>abcd</PAYORADDR4><OWNER>abcd</OWNER><INSURED>abcd</INSURED><REPID>abcd</REPID><REPORTDATE>March 11, 2222</REPORTDATE><POLICY>70000528</POLICY><POLICYDATE>March 11, 1111</POLICYDATE><PRIORDEBT>$.00</PRIORDEBT><PRIORLOANS>$.00</PRIORLOANS><LOANPAYMENTS>$.00</LOANPAYMENTS><CURRENTDEBT>$.00</CURRENTDEBT><LOANINTEREST>$.00</LOANINTEREST><SCHEDPREM>$00.00 PAY</SCHEDPREM><CURRENTINT>0.000%</CURRENTINT><FACEAMOUNT>$000,000</FACEAMOUNT><DEATHBENEFIT>$000,000</DEATHBENEFIT><DEATHBENE_OPT>0</DEATHBENE_OPT><PREMIUMSPAID>$00,00.00</PREMIUMSPAID><ADBTEXT/><MONTH1>0-00</MONTH1><FUNDVALUE1>$00,000.00</FUNDVALUE1><CASHVALUE1>$00,000.00</CASHVALUE1><FUNDVALUE12>$00,000.00</FUNDVALUE12><CASHVALUE12>$00,00.00</CASHVALUE12><TOTAL_PREMREC>$00.00</TOTAL_PREMREC><TOTAL_PREMEXP>$000.00</TOTAL_PREMEXP><TOTAL_COSTINS>$0,000.00</TOTAL_COSTINS><TOTAL_COSTRIDER>$0.00</TOTAL_COSTRIDER><TOTAL_ADMINEXP>$00.00</TOTAL_ADMINEXP><TOTAL_PARTSURR>$.00</TOTAL_PARTSURR><TOTAL_GUARINT>$0000</TOTAL_GUARINT><TOTAL_EXCESSINT>$0</TOTAL_EXCESSINT><TOTAL_FUND>$00</TOTAL_FUND><LANGUAGE>ENGLISH</LANGUAGE><JURISDICTION>Y</JURISDICTION><EFFECTIVE_DATE>1111-11-11</EFFECTIVE_DATE><CURRENTDATE>11/11/1111</CURRENTDATE><STMTBEG>March 11, 1111</STMTBEG><STMTEND>March 11, 1111</STMTEND><PLANID>OOOO</PLANID><DOCNAME>abcd</DOCNAME></MLAPRIM><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$5.25</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$5.25</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$0.00</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$0.00</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$0.00</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$0.00</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$0.00</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$0.00</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$0.00</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$0.00</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$0.00</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>0-00</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$0.00</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE>$00.00</DETL_FUNDVALUE><DETL_CASHVALUE>$00.00</DETL_CASHVALUE></MLADETL><MLADETL><DETL_POLICYNUMBER>00000000</DETL_POLICYNUMBER><DETL_SEQNO>001</DETL_SEQNO><DETL_YEARNUMBER>000</DETL_YEARNUMBER><DETL_MONTH>TOTAL</DETL_MONTH><DETL_COSTINS>$00.00</DETL_COSTINS><DETL_COSTRIDER>$.00</DETL_COSTRIDER><DETL_ADMINEXP>$63.00</DETL_ADMINEXP><DETL_PREMREC>$00.00</DETL_PREMREC><DETL_PREMEXP>$00.00</DETL_PREMEXP><DETL_GUARINT>$0.00</DETL_GUARINT><DETL_EXCESSINT>$00.00</DETL_EXCESSINT><DETL_PARTSURR>$.00</DETL_PARTSURR><DETL_FUNDVALUE/><DETL_CASHVALUE/></MLADETL></DATARECORD></ROOT>";

            XmlDocument doc = new XmlDocument();
            doc.LoadXml(xml);

            string json = JsonConvert.SerializeXmlNode(doc);
            dynamic data = Newtonsoft.Json.Linq.JObject.Parse(json);
            string requestTransType = data.ROOT.HEADER.TRANSTYPE;
            requestData = @"{""UsrTransType"":""" + requestTransType + @"""}";
        }
        public void createNewTestJSONRecord()
        {
            var request = CreateRequest2(serverUri,requestData);
            using (var response = (HttpWebResponse)request.GetResponse())
            {
                if (response.StatusCode == HttpStatusCode.OK)
                {
                    using (var reader = new StreamReader(response.GetResponseStream()))
                    {
                        var responseMessage = reader.ReadToEnd();
                        Console.WriteLine(responseMessage);
                        if (responseMessage.Contains("\"Code\":1"))
                        {
                            throw new UnauthorizedAccessException($"Unauthorized {userName} for {serverUri}");
                        }
                    }
                }
            }
        }
        private HttpWebRequest CreateRequest2(string url, string requestData=null)
        {
            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(url);
            request.ContentType = "application/json";
            request.Method = "POST";
            request.KeepAlive = true;
            request.CookieContainer = AuthCookie;
            request.Headers.Add("BPMCSRF", CsrfToken);

            if (!string.IsNullOrEmpty(requestData))
            {
                using (var requestStream = request.GetRequestStream())
                {
                    using (var writer = new StreamWriter(requestStream))
                    {
                        writer.Write(requestData);
                    }
                }
            }
            return request;
        }
    }
}